const express = require('express');
const router = express.Router();

const users = [
  { "first_name": "Samuel", "last_name": "Acero" },
  { "first_name": "Darek", "last_name": "Aljuri" },
  { "first_name": "Juan", "last_name": "Cepeda" },
  { "first_name": "Ana", "last_name": "Chaves" },
  { "first_name": "Carlos", "last_name": "Cruz" },
  { "first_name": "Diego", "last_name": "Diaz" },
  { "first_name": "Jorge", "last_name": "Diaz" },
  { "first_name": "David", "last_name": "Diaz" },
  { "first_name": "Juan", "last_name": "Forero" },
  { "first_name": "Santiago", "last_name": "Gutierrez" },
  { "first_name": "Samuel", "last_name": "Lopez" },
  { "first_name": "Michael", "last_name": "Medina" },
  { "first_name": "Katherin", "last_name": "Moreno" },
  { "first_name": "Juan", "last_name": "Moreno" },
  { "first_name": "Nicolas", "last_name": "Muñoz" },
  { "first_name": "Santiago", "last_name": "Navarro" },
  { "first_name": "Juan", "last_name": "Parrado" },
  { "first_name": "Daniel", "last_name": "Ramirez" },
  { "first_name": "Juan", "last_name": "Restrepo" },
  { "first_name": "Gabriela", "last_name": "Reyes" },
  { "first_name": "Juan", "last_name": "Rodriguez" },
  { "first_name": "Valentina", "last_name": "Ruiz" },
  { "first_name": "Mariana", "last_name": "Salas" },
  { "first_name": "Sebastián", "last_name": "Sánchez" },
  { "first_name": "Josue", "last_name": "Sarmiento" },
  { "first_name": "Santiago", "last_name": "Soler" },
  { "first_name": "Maria", "last_name": "Tamayo" },
  { "first_name": "Deivid", "last_name": "Urrea" },
  { "first_name": "Andrés", "last_name": "Azcona" },
];


router.get('/:count', (req, res) => {
    const count = parseInt(req.params.count, 10) || 10;
    let sortOrder = req.query.sort || 'ASC';

    // Validar el parámetro de orden
    if (!['ASC', 'DESC'].includes(sortOrder)) {
        return res.status(400).send('Parámetro de organización inválido. Utilice "ASC" o "DESC".');
    }

    // Ordenar la lista de usuarios
    let sortedUsers = [...users]; // Clonar la lista de usuarios para evitar modificar la original
    sortedUsers.sort((a, b) => {
        if (sortOrder === 'ASC') {
            return a.last_name.localeCompare(b.last_name);
        } else {
            return b.last_name.localeCompare(a.last_name);
        }
    });

    // Obtener el índice de inicio y final basado en el orden
    let startIndex = sortOrder === 'ASC' ? 0 : Math.max(sortedUsers.length - count, 0);
    let endIndex = Math.min(startIndex + count, sortedUsers.length);

    // Filtrar la lista según el índice de inicio y final
    let limitedUsers = sortedUsers.slice(startIndex, endIndex);

    // Crear una cadena de salida
    let output = 'Lista de usuarios:\n\n';
    limitedUsers.forEach(user => {
        output += `${user.first_name} ${user.last_name}\n`;
    });

    // Enviar la respuesta con la cadena de salida
    res.type('text').send(output);
});

  
  
  
module.exports = router;
